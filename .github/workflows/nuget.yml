on:
  workflow_call:
    inputs:
      windows-only:
        type: boolean
        required: false
        default: false
      deploy-on-tags-only:
        type: boolean
        required: false
        default: true
      dotnet-version:
        type: string
        required: true
      dotnet-test-logger:
        type: string
        required: false
        default: GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true
      package-version:
        type: string
        required: false
        default: ""

    secrets:
      CODECOV_TOKEN:
        required: false
      NUGET_TOKEN:
        required: true
      DISCORD_WEBHOOK:
        required: false
      # Reusable workflows don't propagate parent's execution context,
      # so we need this hack to pass additional environment variables from the caller.
      DYNAMIC:
        required: false

env:
  TERM: xterm
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: windows-latest
    permissions:
      actions: write
      contents: read

    steps:
      - name: Initialize environment
        run: echo "${{ secrets.DYNAMIC }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Install dependencies
        run: dotnet restore --packages packages/

      - name: Run build
        run: >
          dotnet build
          --no-restore
          --no-incremental
          --configuration Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: .

  test:
    # Explicit name is required due to the matrix hack below
    name: test (${{ matrix.os }})
    needs: build
    runs-on: ${{ matrix.os }}
    permissions:
      actions: read

    env:
      # Secrets can't be referenced in conditionals, but environment variables can.
      # https://github.com/github/docs/issues/6861#issuecomment-870757186
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # Below is a hacky way to implement a conditional matrix
        windows-only:
          - ${{ inputs.windows-only }}
        exclude:
          - windows-only: true
            os: "ubuntu-latest"
          - windows-only: true
            os: "macos-latest"

    steps:
      - name: Initialize environment
        run: echo "${{ secrets.DYNAMIC }}" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Run tests
        run: >
          dotnet test
          --no-build
          --no-restore
          --configuration Release
          --logger "${{ inputs.dotnet-test-logger }}"
          --collect:"XPlat Code Coverage"
          --
          RunConfiguration.CollectSourceInformation=true
          DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Upload coverage
        if: ${{ env.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  pack:
    needs: build
    runs-on: windows-latest
    permissions:
      actions: write

    steps:
      - name: Initialize environment
        run: echo "${{ secrets.DYNAMIC }}" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Create packages
        run: >
          dotnet pack
          --configuration Release
          -p:ContinuousIntegrationBuild=true
          ${{ inputs.package-version && format('-p:Version={0}', inputs.package-version) || '' }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: "**/*.nupkg"

  deploy:
    if: ${{ !inputs.deploy-on-tags-only || github.event_name == 'push' && github.ref_type == 'tag' }}
    needs:
      - pack
      - test
    runs-on: ubuntu-latest
    permissions:
      actions: read

    steps:
      - name: Initialize environment
        run: echo "${{ secrets.DYNAMIC }}" >> $GITHUB_ENV

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages

      - name: Push packages
        run: >
          dotnet nuget push **/*.nupkg
          --source "https://api.nuget.org/v3/index.json"
          --api-key ${{ secrets.NUGET_TOKEN }}

  notify:
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    needs: deploy
    runs-on: ubuntu-latest

    env:
      # Secrets can't be referenced in conditionals, but environment variables can.
      # https://github.com/github/docs/issues/6861#issuecomment-870757186
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

    steps:
      - name: Initialize environment
        run: echo "${{ secrets.DYNAMIC }}" >> $GITHUB_ENV

      - name: Notify Discord
        if: ${{ env.DISCORD_WEBHOOK }}
        uses: tyrrrz/action-http-request@v1
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            Content-Type: application/json; charset=UTF-8
          body: |
            {
              "content": "**${{ github.event.repository.name }}** new version released!\nVersion: `${{ github.ref_name }}`\nChangelog: <${{ github.event.repository.html_url }}/blob/${{ github.ref_name }}/Changelog.md>"
            }
